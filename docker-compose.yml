version: '2.3'
services:
  traefik:
    image: traefik:1.7-alpine
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./traefik.toml:/etc/traefik/traefik.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network
  
  elasticsearch:
    image: amazon/opendistro-for-elasticsearch:0.7.0
    container_name: elasticsearch
    environment:
      - cluster.name=odfe-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - odfe-network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent -f https://localhost:9200/_cluster/health -u admin:admin --insecure || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  kibana:
    image: amazon/opendistro-for-elasticsearch-kibana:0.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: https://elasticsearch:9200
      SERVER_NAME: kibana.localhost
    networks:
      - traefik-network
      - odfe-network
    labels:
      - "traefik.enable=true"
      - "traefik.web.port=5601"
      - "traefik.web.frontend.rule=Host:kibana.localhost"
      - "traefik.web.backend.healthcheck.path=/api/status"
      - "traefik.web.backend.healthcheck.interval=10s"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent -f http://localhost:5601/api/status -u admin:admin || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
      
networks:
  traefik-network:
    external: true
  odfe-network:
    external: false

volumes:
  es_data:
    driver: local